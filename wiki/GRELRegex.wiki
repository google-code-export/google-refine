#summary GREL regular expression support

==Introduction==

A regular expression is a string that describes a text pattern occurring in other strings. Consider the text

{{{
  Once upon    a  time  in the   land of  King Arthur
}}}

The number of spaces between consecutive words vary. In order to change the text so that there is precisely 1 space between any 2 consecutive words, conceptually, we want to replace any continuous sequence of one or more spaces (no matter how many) with exactly one space. We can use a regular expression to describe "any continuous sequence of one or more spaces (no matter how many)".

Google Refine and Google Refine Expression Language support regular expressions in the syntax of Java regular expressions: [http://java.sun.com/docs/books/tutorial/essential/regex/index.html].

To write a regular expression inside a GREL expression, wrap it between a pair of forward slashes /. For example, in

{{{
  value.replace(/\s+/, " ")
}}}

the regular expression is

{{{
  \s+
}}}

That is similar to how you write regular expressions in Javascript. On the other hand, in Java, there is no native syntax for regular expressions, so you would have to write them as strings and escape them properly (e.g., `"\\s+"`).

Elsewhere in Google Refine, i.e., not within a GREL expression, do not use slashes to wrap regular expressions.


==Basics==

To describe a pattern, you typically need concepts like something repeating again and again, or some things A and B occurring interchangeably.