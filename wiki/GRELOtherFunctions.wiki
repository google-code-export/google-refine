#summary Other functions supported by the Google Refine Expression Language (GREL)

===`type(o)`===

Returns the type of the object o.

===`hasField(o, string name)`===

Returns a boolean. Returns whether o has field name.

TODO: Needs Example.

===`jsonize(value)`===

Quotes a value as a JSON literal value

===`parseJson(string s)`===

Returns JSON Object. Parses a string as JSON

===`cross(cell c, string projectName, string columnName)`===

Returns an array of zero or more rows in the project `projectName` for which the cells in their column `columnName` have the same content as `cell c`. The typical use case is creating a custom text facet with an expression like this:

{{{
  cell.cross("proj", "keyCol").cells.col2.value
}}}

===`facetCount(choiceValue, string facetExpression, string columnName)`===

Returns the facet count corresponding to the given choice value

TODO: Needs Example

----
===See Also===
----
  * [GRELBooleanFunctions GREL Boolean Functions]
  * [GRELStringFunctions GREL String Functions]
  * [GRELArrayFunctions GREL Array Functions]
  * [GRELStringArrayFunctions GREL String/Array Functions]
  * [GRELMathFunctions GREL Math Functions]
  * [GRELDateFunctions GREL Date Functions]
  * [GRELOtherFunctions GREL Other Functions]
  
  * [GRELReference GREL Reference]
  * [GRELControls GREL Controls]
  * [GRELRegex GREL Regular Expressions]