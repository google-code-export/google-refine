#summary Examples of fetching URLs from web services and processing them within Gridworks

** In Progress **

= Introduction =

Gridworks supports the ability to fetch JSON from any web service based on values in a Gridworks project and create a new column out of it.  Once you have the JSON, you can use the parseJson() function to create new columns, transform cell values, or even create new facets.

In this article, I'll show a detailed example how it's done, starting with a very simple project with only 3 columns and 19 rows.  (There's a link to this data in Excel format at the end of this post.)  I'll illustrate how to call the Facebook Graph API and the Google Translate API to annotate the project with extra information you can use to manipulate, analyze, and cleanse your dataset.

= Details =

Here's the initial dataset, created from information found [http://www.facebook.com/pages/#!/pages/?browse&ps=89 here]:

[http://freebase-gridworks.googlecode.com/svn/wiki/images/FetchUrlsRecipe-InitialDataset.png]

First, let's get more information about these pages using the [http://developers.facebook.com/docs/api Facebook Open Graph API].  For example, you retrieve the JSON for the first row with this URL: [http://graph.facebook.com/105911579453084].  

Gridworks can retrieve this information for all the rows at once using the "Add Column By Fetching URLs..." command, accessed via the dropdown menu to the left of the *Facebook ID* column:

[http://freebase-gridworks.googlecode.com/svn/wiki/images/FetchUrlsRecipe-FetchUrlsMenu.png]

Next, enter the information in the "Fetch URLs" dialog as follows:

[http://freebase-gridworks.googlecode.com/svn/wiki/images/FetchUrlsRecipe-FetchUrlsDialog.png]

Note the following:
 * Many systems prevent you from making too many requests per second.  To avoid this problem, set the throttle delay, which tells Gridworks to wait the specified number of milliseconds between URL requests. 
 * Before pressing OK, copy/paste a URL or two from the right column in the dialog and test it in another browser tab to make sure it works.

When it's done, it will look something like this:

[http://freebase-gridworks.googlecode.com/svn/wiki/images/FetchUrlsRecipe-AfterFacebookFetch.png]

There is a lot of information in the JSON you might be interested in, but let's extract the information from the "link" element and the plot_outline element.  To do this, click on the dropdown menu for *Graph JSON" and use the "Edit Column > Add Column Based on This Column..." command.  Use the following formula:

{{{
value.parseJson()["link"]
}}}

When it's done, there will be a new column with the contents of the "link" element extracted from the JSON returned from the Graph API.
