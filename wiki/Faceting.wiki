#labels Features
Google Refine supports faceted browsing as a mechanism for 
  * exploring your data
  * filtering down to just the subset of rows that you want to edit en masse.

(Currently faceting panels have a hard limit of 2000 values shown, and may give an error if exceeded, you will have to partition your data to overcome this limit and be able to display the facet effectively)

You can *save interesting facets* in your project by bookmarking using the *permalink* on Refine's header bar menu.  And even sharing this and your exported project with others.

There are several types of facet: text, numeric, text search.

(The results of individual facet panels can also be exported as TSV by clicking the link in the top left corner of each panel)

==Text Facets==

You can think of a text facet as a grouping summary of the rows in a data set. For example, given the data set like this

|| president || died in office || party ||
||  Abraham Lincoln || yes || Republican ||
||  Andrew Johnson || no ||  Democratic ||
||  Ulysses Grant || no || Republican ||
||  Rutherford Hayes || no || Republican ||
||  James Garfield || yes || Republican ||
||  Chester Arthur || no || Republican ||
||  Grover Cleveland || no || Democratic ||
||  Benjamin Harrison || no || Republican ||
||  William McKinley || yes || Republican ||
||  Theodore Roosevelt || no || Republican ||
||  William Taft || no || Republican ||
||  Woodrow Wilson || no || Democratic ||
||  Warren Harding ||  yes || Republican ||
||  Calvin Coolidge || no || Republican ||
|| ... || ... || ... ||

creating a standard text facet on the party column yields something like this

|| choice || count ||
|| Democratic || 15 ||
|| Republican || 18 ||
|| ... || ... ||

Just by creating such a text facet, you already gain some insight into your data set: there are 15 democrats, 18 republicans, and so forth. The facet essentially groups the rows by their party cells, and counts the rows in each group.

What's more: when you click on Democratic in the facet, the data table will show only the 15 rows in which the party cells contain "Democratic". That is, picking a choice in the facet performs a filter.

You can also create several facets at the same time, say, a text facet on the "party" column as well as a text facet on the "died in office" column. Selecting "yes" in the "died in office" column filters the rows down to just the 8 rows in which the "died in office" cells contain "yes"--that is, you're now seeing just the eight presidents who died while in office. This action also updates the "party" facet, which should now show something like this:

|| choice || count ||
|| Democratic || 2 ||
|| Republican || 4 ||
|| ... || ... ||

This means that out of the 8 presidents who died in office, two were democrats, four republicans, and so forth. You've gained just another insight, now by using several facets together.

After selecting "yes" in the "died in office" facet, you can also select, say, "Republican" in the "party" facet to filter for those four republican presidents who died while in office. By making selections in several facets, you can effectively perform a sophisticated query over the rows.

==Numeric Facets==

You can also think of a numeric facet as a grouping summary, except that the grouping happens differently than in a text facet. A numeric facet groups rows by numbers contained in cells in some column. The numbers are put into some bins, and then for each bin the rows corresponding to it are counted. The bins are plotted in a histogram.

Perform a custom numeric facet on a column and enter your expression, such as
{{{
value==459822  //this will match any rows that have number 459822 in the column
}}}
or
{{{
value>=10000  //this will match any rows that are greater than or equal to the number 10000.
}}}
==Text Search Facets==

==Custom Facets==
To find 2 or more occurrences of a "," comma character in a string:
{{{
value.split(",").length() > 2
}}}
To cluster or group rows by 1000 use the following custom text facet:
{{{
floor(rowIndex/1000)
}}}
To group by even or odd rows use Jython and modulo operator '%' in custom text facet:
{{{
return rowIndex%2
}}}

==Reconcile Facets==

*By Judgement* - display a facet showing reconciled and unreconciled matches.

*Best Candidate's Relevance Score* - display a facet showing relevance scores from reconciling services.

*Best Candidate's Type Match* - True / False concerning whether the best candidate topic has the type expected (the type you specify when you start the recon process).

*Best Candidate's Name Match* - name match is string match (not case sensitive) on reconciled cell.

*Best Candidate's Name Edit Distance* - shows the number of character changes necessary to get the cell's text to look like the best candidate topic's name.

*Best Candidate's Name Word Similarity* - word similarity is a fraction of words that are the same; ( "foo bar baz" and "bar and foo" is 0.6666 similar, I believe. )

*Best Candidate's Types* - Lists Freebase types of the first candidate topic for each cell.
== Custom Reconciliation (Reconciling) facets ==

=== Filtering cells not yet sent for reconciliation ===

Often you may only send part of a dataset for reconciliation.  To filter parts of the dataset which have been sent for reconciliation (whether or not they have been subsequently judged) from those that haven't, please use the following custom text filter:

{{{
  isNull(cell.recon)
}}}

You may also need to determine candidates length for closer inspection:

{{{
 cell.recon.candidates.length()
}}}

Other times, you may want to see if your first cell's word matches with any recon subjects:

{{{
 value.partition(" ")[0] == cell.recon.best.name.partition(" ")[0]
}}}

=== Additional Reconciliation recipes ===
{{{
if(cell.value.toLowercase() != cell.recon.match.name.toLowercase(), cell.value, null)
}}} 